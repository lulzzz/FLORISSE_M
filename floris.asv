classdef floris<handle
    properties
        inputData
        outputData
        outputDataAEP
    end
    methods        
        % Initialization
        function self = floris(self,modelType,turbType,siteType,visualizationType)
            addpath('functions');
            if nargin <= 3; visualizationType = '2d'; end;
            if nargin <= 2; siteType  = '9turb';      end;
            if nargin <= 1; turbType  = 'NREL5MW';    end;
            if nargin <= 0; modelType = 'default';    end;
            self.inputData = floris_loadSettings(modelType,turbType,siteType,visualizationType);
        end
       
        % Optimization methods can be added here
        % ....
        % ....
        
        % FLORIS single execution
        function [self,outputData] = run(self,inputData)
            if exist('inputData') == 0; inputData = self.inputData; end;
            [self.inputData,self.outputData] = floris_run(inputData);
            if nargout > 0; outputData = self.outputData; end;
        end
        
        % Visualize single FLORIS plot
        function visualize(self)
            inputData  = self.inputData;
            outputData = self.outputData;
            if isstruct(outputData) == 0
                disp('outputData is not available/not related to a single simulation.');
            end; 
            floris_visualization(inputData,outputData);
        end;
        
        % FLORIS for a range of settings
        function [self,outputDataAEP] = AEP(self)
            WS_range  = [6:0.5:10];
            inputData = self.inputData;
            for i = 1:length(WS_range);
                inputData.uInfIf = WS_range(i);
                outputData{i}    = self.run(inputData);
            end;
        end        
    end
end